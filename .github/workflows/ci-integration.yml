name: CI Integración (docker-compose)

on:
  push:
    branches: [ "main" ]
    paths: [ "Sales-System/**", "mysql-init/**", "docker-compose.yml", ".github/workflows/ci-integration.yml" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "Sales-System/**", "mysql-init/**", "docker-compose.yml", ".github/workflows/ci-integration.yml" ]

jobs:
  compose-test:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build imágenes locales
        run: docker compose build
        # si tu compose no está en la raíz: docker compose -f ruta/compose.yml build

      - name: Up stack
        run: docker compose up -d

      - name: Esperar servicios (ajusta puertos/rutas)
        run: |
          for i in {1..60}; do
            if curl -fsS http://localhost:3003/health >/dev/null 2>&1; then
              echo "OK"; exit 0
            fi
            echo "esperando..."; sleep 5
          done
          echo "Timeout"; exit 1

      - name: Smoke tests (ajusta endpoints)
        run: |
          set -e
          curl -f http://localhost:3001/api/clientes
          curl -f http://localhost:3002/api/productos
          curl -f http://localhost:3003/api/usuarios
          curl -f http://localhost:3004/api/ventas

      - name: Logs (si falla)
        if: failure()
        run: docker compose logs --no-color > compose-logs.txt || true

      - name: Artefacto logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: compose-logs.txt

      - name: Down
        if: always()
        run: docker compose down -v
